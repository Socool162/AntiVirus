==========================================================
YÊU CẦU BÀI TẬP: ANTIVIRUS 
==========================================================

Xây dựng chương trình quét virus (Antivirus Scanner):
Yêu cầu:
- Nhận một thư mục đầu vào, duyệt toàn bộ các file PE trong đó.
- Với mỗi file, phân tích cấu trúc PE để:
	+ Phát hiện dấu hiệu nhiễm virus
	+ Ghi log (file/console) các file bị nhiễm (tên file, entrypoint).
	+ Bóc tách mã virus để trả về nguyên trạng file gốc. Lưu file sạch ra thư mục khác

- Tạo log (file/console) báo cáo kết quả sau khi quét:
	+ Tổng số file quét.
	+ Số file bị nhiễm.
	+ Số file bóc tách thành công.
Chương trình C/C++
Nâng cao: Bổ sung GUI hỗ trợ các chức năng (chọn folder, file đầu vào/đầu ra, hiển thị kết quả...)



==========================================================
**TÓM TẮT LUỒNG HOẠT ĐỘNG CỦA ANTIVIRUS**
==========================================================

Input thư mục cần quét (`Scanned Path`) và thư mục lưu file sạch (`Cleaned Path`)
Sau khi khởi tạo và mở file log, nó gọi hàm `scanDirectory`. 
Hàm `scanDirectory` duyệt đệ quy thư mục được chỉ định, lọc ra các file `.exe` và `.dll` 
Rồi chuyển từng file cho `processFile` xử lý. 

Hàm `processFile` đọc toàn bộ file vào buffer, phân tích cấu trúc PE, và thực hiện logic phát hiện: tìm một section tên là `.infect` và kiểm tra xem Entry Point của file có đang trỏ vào section đó không. 

Nếu phát hiện lây nhiễm, nó gọi hàm `disinfect` để "vá" lại file trong bộ đệm bằng cách đọc OEP gốc được virus cất giữ (tại offset `0x9F` so với đầu stub) và khôi phục OEP này về PE Header. 

Hàm `disinfect` cũng giảm `NumberOfSections` và xóa header của section `.infect`. 
Cuối cùng, `processFile` ghi lại bộ đệm đã được vá (với kích thước file đã được cắt bớt section virus) ra một file mới trong thư mục `Cleaned Path`.

END!!!
